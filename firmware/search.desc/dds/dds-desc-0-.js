searchState.loadedDescShard("dds", 0, "Urukul as a downstream EEM on stabilizer.\nThe RTIC application module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nLocal resources\nHolds the maximum priority level for use by async HAL …\nInterrupt handler to dispatch async tasks at priority 1\nUser code end Shared resources\nExecution context\nShared resources <code>ethernet_link</code> has access to\nExecution context\nShared resources <code>idle</code> has access to\nExecution context\nExecution context\nLocal resources <code>settings_update</code> has access to\nShared resources <code>settings_update</code> has access to\nExecution context\nLocal resources <code>usb</code> has access to\nShared resources <code>usb</code> has access to\nExecution context\nCore peripherals\nCritical section token for init\nDevice peripherals (PAC)\nHardware task\nSoftware task\nThe space used to allocate async executors in bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdle loop\nInitialization function\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocal Resources this task has access to\nLocal Resources this task has access to\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nSoftware task\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nSoftware task\nExecution context\nExecution context\nShared resources <code>ethernet_link</code> has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nShared resources <code>idle</code> has access to\nShared Resources this task has access to\nExecution context\nCore peripherals\nCritical section token for init\nDevice peripherals (PAC)\nThe space used to allocate async executors in bytes.\nExecution context\nLocal resources <code>settings_update</code> has access to\nShared resources <code>settings_update</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nLocal resources <code>usb</code> has access to\nShared resources <code>usb</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task")