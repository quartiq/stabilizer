searchState.loadedDescShard("platform", 0, "A basic delay implementation.\nSettings that are used for configuring the network …\nThe telemetry client for reporting telemetry data over …\nExecute the DFU bootloader stored in system memory.\nThe broker domain name (or IP address) to use for MQTT …\nCheck if the DFU reboot flag is set, indicating a reboot …\nIndicate a reboot to DFU is requested.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe MQTT ID to use upon connection with a broker.\nThe interface to read/write data to/from serially (via …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn optional static IP address to use. An unspecified IP …\nThe MAC address of Stabilizer, which is used to …\nMetadata associated with the application\nGet the network settings from the application settings.\nConstruct the settings given known network settings.\nConstruct a new telemetry client.\nCreate a new delay.\nPublish telemetry over MQTT\nThe storage mechanism used to persist settings to between …\nUpdate the telemetry client")