searchState.loadedDescShard("stabilizer", 0, "Module for all hardware-specific setup of Stabilizer\nA type representing an ADC sample.\nCustom type for referencing DAC output codes. The internal …\nReturns the argument unchanged.\nConstruct an ADC code from a provided binary …\nReturns the argument unchanged.\nConstruct an ADC code from the stabilizer-defined code …\nReturns the argument unchanged.\nCreate a dac code from the provided DAC output code.\nEncode signed 16-bit values into DAC offset binary for a …\nGet the AFE gain as a numerical value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new instance of this bitfield with the given raw …\nReturns the underlying raw value of this bitfield.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nThe maximum DAC/ADC serial clock line frequency. This is a …\nThe ADC setup time is the number of seconds after the CSn …\nThe multiplier used for the DDS reference clock PLL.\nThe DDS reference clock frequency in MHz.\nThe divider from the DDS system clock to the SYNC_CLK …\nThe DDS system clock frequency after the internal PLL …\nThe maximum ADC/DAC sample processing buffer size.\nThe delay after initiating a QSPI transfer before …\nThe duration to assert IO_Update for the pounder DDS.\nThe QSPI frequency for communicating with the pounder DDS.\nThe system clock, used in various timer calculations\nThe optimal counting frequency of the hardware timers used …\nSystem timer (RTIC Monotonic) tick frequency\nA <code>Monotonic</code> based on SysTick.\nStabilizer ADC management interface\nSTM32 Temperature Sensor Driver\nStabilizer DAC management interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDigital Input 0 (DI0) reference clock timestamper\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct the global metadata.\nStabilizer network management module\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nStabilizer hardware configuration\nStarts the <code>Monotonic</code>.\nThe sampling timer is used for managing ADC sampling and …\nRepresents data associated with ADC.\nRepresents data associated with ADC.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct the ADC input channel.\nConstruct the ADC input channel.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nEnable the ADC DMA transfer sequence.\nEnable the ADC DMA transfer sequence.\nWait for the transfer of the currently active buffer to …\nWait for the transfer of the currently active buffer to …\nA programmable gain amplifier that allows for setting the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new programmable gain driver.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nSet the gain of the front-end.\nA driver to access the CPU temeprature sensor.\nReturns the argument unchanged.\nGet the temperature of the CPU in degrees Celsius.\nCalls <code>U::from(self)</code>.\nConstruct the temperature sensor.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nRepresents data associated with DAC.\nRepresents data associated with DAC.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct the DAC output channel.\nConstruct the DAC output channel.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nWait for the transfer of the currently active buffer to …\nWait for the transfer of the currently active buffer to …\nThe timestamper for DI0 reference clock inputs.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet the latest timestamp that has occurred.\nConstruct the DI0 input timestamper.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nStart to capture timestamps on DI0.\nProcessor for managing network hardware.\nA structure of Stabilizer’s default network users.\nEnable data streaming.\nDirect the stream to the provided remote target.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandle ethernet link connection status.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct Stabilizer’s default network users.\nConstruct a new network processor.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nUpdate and process all of the network users state.\nProcess and update the state of the network.\nThe numerical value (discriminant) of the Channel enum is …\nAn iterator over the variants of GpioPin\nA structure containing implementation for Pounder hardware.\nA structure for the QSPI interface for the DDS.\nConfigure the operations mode of the interface.\nThe DdsOutput is used as an output stream to the pounder …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the attenuation of a channel.\nThe HRTimer (High Resolution Timer) is used to generate …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMeasure the power of an input channel in dBm.\nInitialize the QSPI interface.\nConstruct and initialize pounder-specific hardware.\nReset the DDS via the GPIO extender (Pounder v1.2 and …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nSample one of the two auxiliary ADC channels associated …\nSet the attenuation of a single channel.\nSelect external reference clock input.\nRead the temperature reported by the LM75 temperature …\nADC sample timestamper using external Pounder reference …\nWrite data over QSPI to the DDS.\nThe DDS profile update stream.\nGet a builder for serializing a Pounder DDS profile.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new DDS output stream.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nWrite a profile to the stream.\nA HRTimer output channel.\nThe high resolution timer. Currently, only Timer E is …\nConfigure the timer to operate in single-shot mode.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new high resolution timer for generating …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nGenerate a single trigger of the timer to start the output …\nSoftware unit to timestamp stabilizer ADC samples using an …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nObtain a timestamp.\nConstruct the pounder sample timestamper.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nStart collecting timestamps.\nUpdate the period of the underlying timestamp timer.\nThe available networking devices on Stabilizer.\nThe available Pounder-specific hardware interfaces.\nThe available hardware interfaces on Stabilizer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nConfigure the stabilizer hardware for operation.\nA single channel on an ADC peripheral.\nIndicates that the ADC is already in use\nAn ADC peripheral that can provide ownership of individual …\nAllocate an ADC channel for usage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new shared ADC driver.\nRead the ADC channel and normalize the result.\nRead the raw ADC sample for the channel.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nOptional input capture preconditioning filter …\nThe timer used for managing ADC sampling.\nPrescalers for externally-supplied reference clocks.\nThe timer used for managing ADC sampling.\nThe timer used for managing ADC sampling.\nOptional slave operation modes of a timer.\nThe timer used for managing ADC sampling.\nThe event that should generate an external trigger from …\nSelects the trigger source for the timer peripheral.\nGet the timer capture/compare channels.\nGet the timer capture/compare channels.\nGet the timer capture/compare channels.\nGet the timer capture/compare channels.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConfigure the timer peripheral to generate a trigger based …\nConfigure the timer peripheral to generate a trigger based …\nConfigure the timer peripheral to generate a trigger based …\nConfigure the timer peripheral to generate a trigger based …\nGet the period of the timer.\nGet the period of the timer.\nGet the period of the timer.\nGet the period of the timer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct the sampling timer.\nConstruct the sampling timer.\nConstruct the sampling timer.\nConstruct the sampling timer.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nClock the timer from an external source.\nClock the timer from an external source.\nClock the timer from an external source.\nClock the timer from an external source.\nManually set the period of the timer.\nManually set the period of the timer.\nManually set the period of the timer.\nManually set the period of the timer.\nSelect a trigger source for the timer peripheral.\nSelect a trigger source for the timer peripheral.\nSelect a trigger source for the timer peripheral.\nSelect a trigger source for the timer peripheral.\nStart the timer.\nStart the timer.\nStart the timer.\nStart the timer.\nGet the timer update event.\nGet the timer update event.\nGet the timer update event.\nGet the timer update event.\nCapture/Compare 1 selection\nCapture/Compare 2 selection\nCapture/compare 3 selection\nCapture/Compare 4 selection\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nThe channels representing the timer.\n2: CC2 channel is configured as input, IC2 is mapped on TI1\n1: CC1 channel is configured as input, IC1 is mapped on TI1\n1: CC2 channel is configured as input, IC2 is mapped on TI2\n2: CC1 channel is configured as input, IC1 is mapped on TI2\n2: CC4 channel is configured as input, IC4 is mapped on TI3\n1: CC3 channel is configured as input, IC3 is mapped on TI3\n1: CC4 channel is configured as input, IC4 is mapped on TI4\n2: CC3 channel is configured as input, IC3 is mapped on TI4\n3: CC2 channel is configured as input, IC2 is mapped on TRC\n3: CC1 channel is configured as input, IC1 is mapped on TRC\n3: CC4 channel is configured as input, IC4 is mapped on TRC\n3: CC3 channel is configured as input, IC3 is mapped on TRC\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nEnable DMA requests upon timer updates.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nCreate a new update event\nConstruct a new set of channels.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nTrigger a DMA request manually\nCapture/Compare 1 selection\nCapture/Compare 2 selection\nCapture/compare 3 selection\nCapture/Compare 4 selection\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nThe channels representing the timer.\n2: CC2 channel is configured as input, IC2 is mapped on TI1\n1: CC1 channel is configured as input, IC1 is mapped on TI1\n1: CC2 channel is configured as input, IC2 is mapped on TI2\n2: CC1 channel is configured as input, IC1 is mapped on TI2\n2: CC4 channel is configured as input, IC4 is mapped on TI3\n1: CC3 channel is configured as input, IC3 is mapped on TI3\n1: CC4 channel is configured as input, IC4 is mapped on TI4\n2: CC3 channel is configured as input, IC3 is mapped on TI4\n3: CC2 channel is configured as input, IC2 is mapped on TRC\n3: CC1 channel is configured as input, IC1 is mapped on TRC\n3: CC4 channel is configured as input, IC4 is mapped on TRC\n3: CC3 channel is configured as input, IC3 is mapped on TRC\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nEnable DMA requests upon timer updates.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nCreate a new update event\nConstruct a new set of channels.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nTrigger a DMA request manually\nCapture/Compare 1 selection\nCapture/Compare 2 selection\nCapture/compare 3 selection\nCapture/Compare 4 selection\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nThe channels representing the timer.\n2: CC2 channel is configured as input, IC2 is mapped on TI1\n1: CC1 channel is configured as input, IC1 is mapped on TI1\n1: CC2 channel is configured as input, IC2 is mapped on TI2\n2: CC1 channel is configured as input, IC1 is mapped on TI2\n2: CC4 channel is configured as input, IC4 is mapped on TI3\n1: CC3 channel is configured as input, IC3 is mapped on TI3\n1: CC4 channel is configured as input, IC4 is mapped on TI4\n2: CC3 channel is configured as input, IC3 is mapped on TI4\n3: CC2 channel is configured as input, IC2 is mapped on TRC\n3: CC1 channel is configured as input, IC1 is mapped on TRC\n3: CC4 channel is configured as input, IC4 is mapped on TRC\n3: CC3 channel is configured as input, IC3 is mapped on TRC\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nEnable DMA requests upon timer updates.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nCreate a new update event\nConstruct a new set of channels.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nTrigger a DMA request manually\nCapture/Compare 1 selection\nCapture/Compare 2 selection\nCapture/compare 3 selection\nCapture/Compare 4 selection\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nA capture/compare channel of the timer.\nA capture channel of the timer.\nThe channels representing the timer.\n2: CC2 channel is configured as input, IC2 is mapped on TI1\n1: CC1 channel is configured as input, IC1 is mapped on TI1\n1: CC2 channel is configured as input, IC2 is mapped on TI2\n2: CC1 channel is configured as input, IC1 is mapped on TI2\n2: CC4 channel is configured as input, IC4 is mapped on TI3\n1: CC3 channel is configured as input, IC3 is mapped on TI3\n1: CC4 channel is configured as input, IC4 is mapped on TI4\n2: CC3 channel is configured as input, IC3 is mapped on TI4\n3: CC2 channel is configured as input, IC2 is mapped on TRC\n3: CC1 channel is configured as input, IC1 is mapped on TRC\n3: CC4 channel is configured as input, IC4 is mapped on TRC\n3: CC3 channel is configured as input, IC3 is mapped on TRC\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nCheck if an over-capture event has occurred.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture input pre-filter.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nConfigure the input capture prescaler.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nEnable the input capture to begin capturing timer values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nOperate the channel in input-capture mode.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nGet the latest capture from the channel.\nEnable DMA requests upon timer updates.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nAllow the channel to generate DMA requests.\nCreate a new update event\nConstruct a new set of channels.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nOperate the channel as an output-compare.\nTrigger a DMA request manually\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nThe telemetry structure is data that is ultimately …\nThe telemetry buffer is used for storing sample values …\nThe latest input sample on ADC0/ADC1.\nMost recent input voltage measurement.\nThe CPU temperature in degrees Celsius.\nThe latest output code on DAC0/DAC1.\nMost recent output voltage.\nThe latest digital input states during processing.\nMost recent digital input assertion state.\nConvert the telemetry buffer to finalized, SI-unit …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …")