searchState.loadedDescShard("lockin", 0, "Lockin\nUtilize an external modulation signal supplied to DI0\nOutput the in-phase component of the lockin signal.\nUtilize an internally generated reference for demodulation\nOutput the logarithmic power of the lockin\nOutput the lockin magnitude.\nOutput the lockin internal modulation frequency as a …\nOutput the phase of the lockin\nOutput the quadrature component of the lockin signal.\nOutput the lockin reference frequency as a sinusoid\nConfigure the Analog Front End (AFE) gain.\nThe RTIC application module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpecifies which harmonic to use for the lockin.\nSpecifies the lockin lowpass gains.\nSpecifies the operational mode of the lockin.\nSpecifies the LO phase offset.\nSpecifies DAC output mode.\nSpecifis the PLL time constant.\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nSpecifies the target for data streaming.\nSpecifies the telemetry output period in seconds.\nLocal resources\nHolds the maximum priority level for use by async HAL …\nInterrupt handler to dispatch async tasks at priority 1\nUser code end Shared resources\nExecution context\nShared resources <code>ethernet_link</code> has access to\nExecution context\nShared resources <code>idle</code> has access to\nExecution context\nExecution context\nLocal resources <code>process</code> has access to\nShared resources <code>process</code> has access to\nExecution context\nLocal resources <code>settings_update</code> has access to\nShared resources <code>settings_update</code> has access to\nExecution context\nLocal resources <code>start</code> has access to\nExecution context\nLocal resources <code>telemetry</code> has access to\nShared resources <code>telemetry</code> has access to\nExecution context\nLocal resources <code>usb</code> has access to\nShared resources <code>usb</code> has access to\nExecution context\nCore peripherals\nCritical section token for init\nDevice peripherals (PAC)\nHardware task\nSoftware task\nThe space used to allocate async executors in bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdle loop\nInitialization function\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocal Resources this task has access to\nLocal Resources this task has access to\nLocal Resources this task has access to\nLocal Resources this task has access to\nLocal Resources this task has access to\nHardware task\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nSoftware task\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nSoftware task\nSoftware task\nSoftware task\nExecution context\nExecution context\nShared resources <code>ethernet_link</code> has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nShared resources <code>idle</code> has access to\nShared Resources this task has access to\nExecution context\nCore peripherals\nCritical section token for init\nDevice peripherals (PAC)\nThe space used to allocate async executors in bytes.\nExecution context\nLocal resources <code>process</code> has access to\nShared resources <code>process</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nExecution context\nLocal resources <code>settings_update</code> has access to\nShared resources <code>settings_update</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nLocal resources <code>start</code> has access to\nLocal Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nLocal resources <code>telemetry</code> has access to\nShared resources <code>telemetry</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nLocal resources <code>usb</code> has access to\nShared resources <code>usb</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task")