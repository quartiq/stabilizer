searchState.loadedDescShard("fls", 0, "Patent pending: DE102021112017A1\nADC/DAC Samples per batch. The app::process routine is …\nChannel Telemetry\nTelemetry structure. This structure is published via MQTT …\nSettings structure for the application. All fields in this …\nADC and DAC sample rate in timer cycles. One timer cycle …\nSample and batch period configuration. Note that both …\nStream data format.\nBiquad representation type\nUpdate trigger. TODO: Needs explicit trigger for …\nDemodulation amplitude control register.\nThe RTIC application module\nModulation/demodulation RF attenuation.\nAuxiliary front panel ADC input values, undersmpled\nCounter for the number of samples with low power.\nChannel-specific settings.\nChannel frequency estimate (PI counter between telemetry …\nClear the phase unwrap tracking counters once. To make …\nCurrent frequency tuning word added to the configured …\nCurrent phase offset word applied to the modulation DDS.\nDemodulated signal.  <code>-1 &lt;&lt; 31</code> corresponds to negative full …\nExternal reference\nRF output (modulation) or input (demodulation) offset …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAllow digital input to hold\nNumber of sampler where digital input signal was high.\nBuilt raw IIR\nFeedback IIR filter settings. The filter input is phase, …\nAmplitude IIR filter. The filter input is squared …\nInput (demodulation) DDS settings Feedback to stabilize …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLockin local oscillator frequency tuning word. Common to …\nLockin lowpass time constant. The lowpass is a cascade of …\nMinimum demodulated signal power to enable feedback. Note …\nModulation DDS amplitude word\nOutput (modulation) DDS settings\nModulation/demodulation phase offset.\nCurrent number of phase wraps. In units of turns.\nCurrent phase. Offset and scaled.\nStatistics of scaled (settings.phase_scale) phase …\nScaling factor of the unwrapped phase and fine rational …\nPLL time\nLockin demodulation oscillator PLL bandwidth. This PLL …\nPLL time DDS PLL time as seen by CPU (sample) clock. …\nPhase offset feedback gain. Phase feedback is a …\nPower estimate, <code>|demod|²</code> re full scale.\nRaw (binary) channel telemetry, mostly “stateful”\nBiquad parameters Biquad representation subtree access\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nRF power in dBm as reported by the RF detector and ADC. …\nNumber of potential phase slips where the absolute phase …\nTarget for data streaming\nTelemetry output period in seconds\nPounder board temperature\nLocal resources\nHolds the maximum priority level for use by async HAL …\nInterrupt handler to dispatch async tasks at priority 1\nUser code end Shared resources\nShared resources <code>aux_adc</code> has access to\nExecution context\nExecution context\nShared resources <code>ethernet_link</code> has access to\nExecution context\nShared resources <code>idle</code> has access to\nExecution context\nExecution context\nLocal resources <code>process</code> has access to\nShared resources <code>process</code> has access to\nExecution context\nShared resources <code>settings_update</code> has access to\nExecution context\nLocal resources <code>start</code> has access to\nExecution context\nLocal resources <code>telemetry</code> has access to\nShared resources <code>telemetry</code> has access to\nExecution context\nLocal resources <code>usb</code> has access to\nShared resources <code>usb</code> has access to\nExecution context\nSoftware task\nCore peripherals\nCritical section token for init\nDevice peripherals (PAC)\nHardware task\nSoftware task\nThe space used to allocate async executors in bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdle loop\nInitialization function\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocal Resources this task has access to\nLocal Resources this task has access to\nLocal Resources this task has access to\nLocal Resources this task has access to\nHardware task\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nCreate an e-h-c reverse compatibility wrapper using a …\nSoftware task\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nShared Resources this task has access to\nSoftware task\nSoftware task\nSoftware task\nExecution context\nShared resources <code>aux_adc</code> has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nExecution context\nShared resources <code>ethernet_link</code> has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nShared resources <code>idle</code> has access to\nShared Resources this task has access to\nExecution context\nCore peripherals\nCritical section token for init\nDevice peripherals (PAC)\nThe space used to allocate async executors in bytes.\nExecution context\nLocal resources <code>process</code> has access to\nShared resources <code>process</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nExecution context\nShared resources <code>settings_update</code> has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nLocal resources <code>start</code> has access to\nLocal Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nLocal resources <code>telemetry</code> has access to\nShared resources <code>telemetry</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\nExecution context\nLocal resources <code>usb</code> has access to\nShared resources <code>usb</code> has access to\nLocal Resources this task has access to\nShared Resources this task has access to\nSpawns the task directly\nGives waker to the task\n<code>TreeSchema::SCHEMA</code>\n<code>TreeAny::mut_any_by_key()</code>\n<code>TreeAny::ref_any_by_key()</code>\nThere was an error during finalization.\nThe value provided could not be serialized or deserialized …\nCapability to yield and look up <code>Key</code>s\n<code>TreeSchema::SCHEMA</code>\nCompound errors\nThe value could not be accessed.\nFinalize the keys, ensure there are no more.\nLeaf implementation using serde::{Serialize, Deserialize}\n<code>TreeAny::mut_any_by_key()</code>\nLook up the next key in a <code>Internal</code> and convert to <code>usize</code> …\n<code>TreeAny::ref_any_by_key()</code>\n<code>TreeSchema::SCHEMA</code>\n<code>TreeDeserialize::deserialize_by_key()</code>\n<code>TreeAny::mut_any_by_key()</code>\n<code>TreeDeserialize::probe_by_key()</code>\n<code>TreeAny::ref_any_by_key()</code>\n<code>TreeSerialize::serialize_by_key()</code>\nThere was an error during finalization.\nThe value provided could not be serialized or deserialized …\nCapability to yield and look up <code>Key</code>s\n<code>TreeSchema::SCHEMA</code>\nCompound errors\nThe value could not be accessed.\nChain another <code>Keys</code> to this one.\nChain another <code>Keys</code> to this one.\nFinalize the keys, ensure there are no more.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLeaf implementation using serde::{Serialize, Deserialize}\n<code>TreeAny::mut_any_by_key()</code>\nLook up the next key in a <code>Internal</code> and convert to <code>usize</code> …\n<code>TreeDeserialize::probe_by_key()</code>\n<code>TreeAny::ref_any_by_key()</code>\nCreate an e-h-c wrapper around and e-h object Available …\nCreate an e-h-c reverse compatibility wrapper using a …\n<code>TreeSerialize::serialize_by_key()</code>\nTrack whether a leaf node is reached\nTrack whether a leaf node is reached\nTrack depth\nTrack depth\n<code>TreeSchema::SCHEMA</code>\n<code>TreeDeserialize::deserialize_by_key()</code>\n<code>TreeAny::mut_any_by_key()</code>\n<code>TreeDeserialize::probe_by_key()</code>\n<code>TreeAny::ref_any_by_key()</code>\n<code>TreeSerialize::serialize_by_key()</code>")