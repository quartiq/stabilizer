(function() {
    var type_impls = Object.fromEntries([["stabilizer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetworkManager%3C'a,+Device,+Clock%3E\" class=\"impl\"><a href=\"#impl-NetworkManager%3C'a,+Device,+Clock%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, Device, Clock&gt; NetworkManager&lt;'a, Device, Clock&gt;<div class=\"where\">where\n    Device: Device,\n    Clock: <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u32.html\">u32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Clock as <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html#associatedtype.T\" title=\"type embedded_time::clock::Clock::T\">T</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    stack: NetworkStack&lt;'a, Device, Clock&gt;,\n) -&gt; NetworkManager&lt;'a, Device, Clock&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new manager for a shared network stack</p>\n<h5 id=\"args\"><a class=\"doc-anchor\" href=\"#args\">ยง</a>Args</h5>\n<ul>\n<li><code>stack</code> - The network stack that is being shared.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.acquire_stack\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">acquire_stack</a>(\n    &amp;self,\n) -&gt; NetworkStackProxy&lt;'_, NetworkStack&lt;'a, Device, Clock&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Acquire a proxy to the shared network stack.</p>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">ยง</a>Returns</h5>\n<p>A proxy that can be used in place of the network stack. Note the requirements of\nconcurrency listed in the description of this file for usage.</p>\n</div></details></div></details>",0,"stabilizer::hardware::net::NetworkManager"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[2417]}