(function() {
    var type_impls = Object.fromEntries([["stabilizer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Dns-for-NetworkStackProxy%3C'a,+S%3E\" class=\"impl\"><a href=\"#impl-Dns-for-NetworkStackProxy%3C'a,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; Dns for NetworkStackProxy&lt;'a, S&gt;<div class=\"where\">where\n    S: Dns,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;S as Dns&gt;::Error</h4></section></summary><div class='docblock'>The type returned when we have an error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_host_by_name\" class=\"method trait-impl\"><a href=\"#method.get_host_by_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_host_by_name</a>(\n    &amp;mut self,\n    hostname: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.str.html\">str</a>,\n    addr_type: AddrType,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>, Error&lt;&lt;NetworkStackProxy&lt;'a, S&gt; as Dns&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Resolve the first ip address of a host, given its hostname and a desired\naddress record type to look for</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_host_by_address\" class=\"method trait-impl\"><a href=\"#method.get_host_by_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_host_by_address</a>(\n    &amp;mut self,\n    addr: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>, Error&lt;&lt;NetworkStackProxy&lt;'a, S&gt; as Dns&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Resolve the hostname of a host, given its ip address. <a>Read more</a></div></details></div></details>","Dns","stabilizer::hardware::net::NetworkReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetworkStackProxy%3C'a,+S%3E\" class=\"impl\"><a href=\"#impl-NetworkStackProxy%3C'a,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; NetworkStackProxy&lt;'a, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lock</a>&lt;R, F&gt;(&amp;mut self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.reference.html\">&amp;mut S</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Using the proxy, access the underlying network stack directly.</p>\n<h5 id=\"args\"><a class=\"doc-anchor\" href=\"#args\">§</a>Args</h5>\n<ul>\n<li><code>f</code> - A closure which will be provided the network stack as an argument.</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>Any value returned by the provided closure</p>\n</div></details></div></details>",0,"stabilizer::hardware::net::NetworkReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TcpClientStack-for-NetworkStackProxy%3C'a,+S%3E\" class=\"impl\"><a href=\"#impl-TcpClientStack-for-NetworkStackProxy%3C'a,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; TcpClientStack for NetworkStackProxy&lt;'a, S&gt;<div class=\"where\">where\n    S: TcpClientStack,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.TcpSocket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TcpSocket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">TcpSocket</a> = &lt;S as TcpClientStack&gt;::TcpSocket</h4></section></summary><div class='docblock'>The type returned when we create a new TCP socket</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;S as TcpClientStack&gt;::Error</h4></section></summary><div class='docblock'>The type returned when we have an error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.socket\" class=\"method trait-impl\"><a href=\"#method.socket\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">socket</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as TcpClientStack&gt;::TcpSocket, &lt;S as TcpClientStack&gt;::Error&gt;</h4></section></summary><div class='docblock'>Open a socket for usage as a TCP client. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.connect\" class=\"method trait-impl\"><a href=\"#method.connect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">connect</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;S as TcpClientStack&gt;::TcpSocket,\n    remote: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, Error&lt;&lt;S as TcpClientStack&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Connect to the given remote host and port. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send\" class=\"method trait-impl\"><a href=\"#method.send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">send</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;S as TcpClientStack&gt;::TcpSocket,\n    buffer: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>, Error&lt;&lt;S as TcpClientStack&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Write to the stream. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.receive\" class=\"method trait-impl\"><a href=\"#method.receive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">receive</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;S as TcpClientStack&gt;::TcpSocket,\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>, Error&lt;&lt;S as TcpClientStack&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Receive data from the stream. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close\" class=\"method trait-impl\"><a href=\"#method.close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">close</a>(\n    &amp;mut self,\n    socket: &lt;S as TcpClientStack&gt;::TcpSocket,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, &lt;S as TcpClientStack&gt;::Error&gt;</h4></section></summary><div class='docblock'>Close an existing TCP socket.</div></details></div></details>","TcpClientStack","stabilizer::hardware::net::NetworkReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UdpClientStack-for-NetworkStackProxy%3C'a,+S%3E\" class=\"impl\"><a href=\"#impl-UdpClientStack-for-NetworkStackProxy%3C'a,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; UdpClientStack for NetworkStackProxy&lt;'a, S&gt;<div class=\"where\">where\n    S: UdpClientStack,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.UdpSocket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UdpSocket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UdpSocket</a> = &lt;S as UdpClientStack&gt;::UdpSocket</h4></section></summary><div class='docblock'>The type returned when we create a new UDP socket</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;S as UdpClientStack&gt;::Error</h4></section></summary><div class='docblock'>The type returned when we have an error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.socket\" class=\"method trait-impl\"><a href=\"#method.socket\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">socket</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as UdpClientStack&gt;::UdpSocket, &lt;S as UdpClientStack&gt;::Error&gt;</h4></section></summary><div class='docblock'>Allocate a socket for further use.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.connect\" class=\"method trait-impl\"><a href=\"#method.connect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">connect</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;S as UdpClientStack&gt;::UdpSocket,\n    remote: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, &lt;S as UdpClientStack&gt;::Error&gt;</h4></section></summary><div class='docblock'>Connect a UDP socket with a peer using a dynamically selected port. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send\" class=\"method trait-impl\"><a href=\"#method.send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">send</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;S as UdpClientStack&gt;::UdpSocket,\n    buffer: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, Error&lt;&lt;S as UdpClientStack&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Send a datagram to the remote host. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.receive\" class=\"method trait-impl\"><a href=\"#method.receive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">receive</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;S as UdpClientStack&gt;::UdpSocket,\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>), Error&lt;&lt;S as UdpClientStack&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Read a datagram the remote host has sent to us. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close\" class=\"method trait-impl\"><a href=\"#method.close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">close</a>(\n    &amp;mut self,\n    socket: &lt;S as UdpClientStack&gt;::UdpSocket,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, &lt;S as UdpClientStack&gt;::Error&gt;</h4></section></summary><div class='docblock'>Close an existing UDP socket.</div></details></div></details>","UdpClientStack","stabilizer::hardware::net::NetworkReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UdpFullStack-for-NetworkStackProxy%3C'a,+S%3E\" class=\"impl\"><a href=\"#impl-UdpFullStack-for-NetworkStackProxy%3C'a,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; UdpFullStack for NetworkStackProxy&lt;'a, S&gt;<div class=\"where\">where\n    S: UdpFullStack,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_to\" class=\"method trait-impl\"><a href=\"#method.send_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">send_to</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;S as UdpClientStack&gt;::UdpSocket,\n    remote: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>,\n    buffer: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, Error&lt;&lt;S as UdpClientStack&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Send a packet to a remote host/port.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bind\" class=\"method trait-impl\"><a href=\"#method.bind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bind</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;S as UdpClientStack&gt;::UdpSocket,\n    local_port: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u16.html\">u16</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, &lt;S as UdpClientStack&gt;::Error&gt;</h4></section></summary><div class='docblock'>Bind a UDP socket with a specified port</div></details></div></details>","UdpFullStack","stabilizer::hardware::net::NetworkReference"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16823]}