(function() {
    var type_impls = Object.fromEntries([["stabilizer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Dns-for-NetworkStack%3C'_,+Device,+Clock%3E\" class=\"impl\"><a href=\"#impl-Dns-for-NetworkStack%3C'_,+Device,+Clock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Device, Clock&gt; Dns for NetworkStack&lt;'_, Device, Clock&gt;<div class=\"where\">where\n    Device: Device,\n    Clock: <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u32.html\">u32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Clock as <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html#associatedtype.T\" title=\"type embedded_time::clock::Clock::T\">T</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = NetworkError</h4></section></summary><div class='docblock'>The type returned when we have an error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_host_by_name\" class=\"method trait-impl\"><a href=\"#method.get_host_by_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_host_by_name</a>(\n    &amp;mut self,\n    hostname: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.str.html\">str</a>,\n    _addr_type: AddrType,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>, Error&lt;&lt;NetworkStack&lt;'_, Device, Clock&gt; as Dns&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Resolve the first ip address of a host, given its hostname and a desired\naddress record type to look for</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_host_by_address\" class=\"method trait-impl\"><a href=\"#method.get_host_by_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_host_by_address</a>(\n    &amp;mut self,\n    _addr: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>,\n    _: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>, Error&lt;&lt;NetworkStack&lt;'_, Device, Clock&gt; as Dns&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Resolve the hostname of a host, given its ip address. <a>Read more</a></div></details></div></details>","Dns","stabilizer::hardware::net::NetworkStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetworkStack%3C'a,+Device,+Clock%3E\" class=\"impl\"><a href=\"#impl-NetworkStack%3C'a,+Device,+Clock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Device, Clock&gt; NetworkStack&lt;'a, Device, Clock&gt;<div class=\"where\">where\n    Device: Device,\n    Clock: <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u32.html\">u32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Clock as <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html#associatedtype.T\" title=\"type embedded_time::clock::Clock::T\">T</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    stack: Interface,\n    device: Device,\n    sockets: SocketSet&lt;'a&gt;,\n    clock: Clock,\n) -&gt; NetworkStack&lt;'a, Device, Clock&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new network stack.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This implementation only supports up to 16 usable sockets.</p>\n<p>Any handles provided to this function must not be used after constructing the network\nstack.</p>\n<p>This implementation currently only supports IPv4.</p>\n<h5 id=\"args\"><a class=\"doc-anchor\" href=\"#args\">§</a>Args</h5>\n<ul>\n<li><code>stack</code> - The ethernet interface to construct the network stack from.</li>\n<li><code>clock</code> - A clock to use for determining network time.</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A [embedded_nal] compatible network stack.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.seed_random_port\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">seed_random_port</a>(&amp;mut self, seed: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Seed the TCP port randomizer.</p>\n<h5 id=\"args-1\"><a class=\"doc-anchor\" href=\"#args-1\">§</a>Args</h5>\n<ul>\n<li><code>seed</code> - A seed of random data to use for randomizing local TCP port selection.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">poll</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Poll the network stack for potential updates.</p>\n<h5 id=\"returns-1\"><a class=\"doc-anchor\" href=\"#returns-1\">§</a>Returns</h5>\n<p>A boolean indicating if the network stack updated in any way.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close_sockets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">close_sockets</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Force-close all sockets.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_link_reset\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">handle_link_reset</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Handle a disconnection of the physical interface.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.interface\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">interface</a>(&amp;self) -&gt; &amp;Interface</h4></section></summary><div class=\"docblock\"><p>Access the underlying network interface.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.interface_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">interface_mut</a>(&amp;mut self) -&gt; &amp;mut Interface</h4></section></summary><div class=\"docblock\"><p>Mutably access the underlying network interface.</p>\n<h5 id=\"note-1\"><a class=\"doc-anchor\" href=\"#note-1\">§</a>Note</h5>\n<p>Modification of the underlying network interface may unintentionally interfere with\noperation of this library (e.g. through reset, modification of IP addresses, etc.). Mutable\naccess to the interface should be done with care.</p>\n</div></details></div></details>",0,"stabilizer::hardware::net::NetworkStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TcpClientStack-for-NetworkStack%3C'_,+Device,+Clock%3E\" class=\"impl\"><a href=\"#impl-TcpClientStack-for-NetworkStack%3C'_,+Device,+Clock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Device, Clock&gt; TcpClientStack for NetworkStack&lt;'_, Device, Clock&gt;<div class=\"where\">where\n    Device: Device,\n    Clock: <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u32.html\">u32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Clock as <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html#associatedtype.T\" title=\"type embedded_time::clock::Clock::T\">T</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = NetworkError</h4></section></summary><div class='docblock'>The type returned when we have an error</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.TcpSocket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TcpSocket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">TcpSocket</a> = SocketHandle</h4></section></summary><div class='docblock'>The type returned when we create a new TCP socket</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.socket\" class=\"method trait-impl\"><a href=\"#method.socket\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">socket</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SocketHandle, NetworkError&gt;</h4></section></summary><div class='docblock'>Open a socket for usage as a TCP client. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.connect\" class=\"method trait-impl\"><a href=\"#method.connect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">connect</a>(\n    &amp;mut self,\n    socket: &amp;mut SocketHandle,\n    remote: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, Error&lt;NetworkError&gt;&gt;</h4></section></summary><div class='docblock'>Connect to the given remote host and port. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send\" class=\"method trait-impl\"><a href=\"#method.send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">send</a>(\n    &amp;mut self,\n    socket: &amp;mut SocketHandle,\n    buffer: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>, Error&lt;NetworkError&gt;&gt;</h4></section></summary><div class='docblock'>Write to the stream. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.receive\" class=\"method trait-impl\"><a href=\"#method.receive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">receive</a>(\n    &amp;mut self,\n    socket: &amp;mut SocketHandle,\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>, Error&lt;NetworkError&gt;&gt;</h4></section></summary><div class='docblock'>Receive data from the stream. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close\" class=\"method trait-impl\"><a href=\"#method.close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">close</a>(&amp;mut self, socket: SocketHandle) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, NetworkError&gt;</h4></section></summary><div class='docblock'>Close an existing TCP socket.</div></details></div></details>","TcpClientStack","stabilizer::hardware::net::NetworkStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UdpClientStack-for-NetworkStack%3C'_,+Device,+Clock%3E\" class=\"impl\"><a href=\"#impl-UdpClientStack-for-NetworkStack%3C'_,+Device,+Clock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Device, Clock&gt; UdpClientStack for NetworkStack&lt;'_, Device, Clock&gt;<div class=\"where\">where\n    Device: Device,\n    Clock: <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u32.html\">u32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Clock as <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html#associatedtype.T\" title=\"type embedded_time::clock::Clock::T\">T</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = NetworkError</h4></section></summary><div class='docblock'>The type returned when we have an error</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.UdpSocket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.UdpSocket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">UdpSocket</a> = UdpSocket</h4></section></summary><div class='docblock'>The type returned when we create a new UDP socket</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.socket\" class=\"method trait-impl\"><a href=\"#method.socket\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">socket</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;UdpSocket, NetworkError&gt;</h4></section></summary><div class='docblock'>Allocate a socket for further use.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.connect\" class=\"method trait-impl\"><a href=\"#method.connect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">connect</a>(\n    &amp;mut self,\n    socket: &amp;mut UdpSocket,\n    remote: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, NetworkError&gt;</h4></section></summary><div class='docblock'>Connect a UDP socket with a peer using a dynamically selected port. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send\" class=\"method trait-impl\"><a href=\"#method.send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">send</a>(\n    &amp;mut self,\n    socket: &amp;mut UdpSocket,\n    buffer: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, Error&lt;NetworkError&gt;&gt;</h4></section></summary><div class='docblock'>Send a datagram to the remote host. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.receive\" class=\"method trait-impl\"><a href=\"#method.receive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">receive</a>(\n    &amp;mut self,\n    socket: &amp;mut UdpSocket,\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>), Error&lt;NetworkError&gt;&gt;</h4></section></summary><div class='docblock'>Read a datagram the remote host has sent to us. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close\" class=\"method trait-impl\"><a href=\"#method.close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">close</a>(&amp;mut self, socket: UdpSocket) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, NetworkError&gt;</h4></section></summary><div class='docblock'>Close an existing UDP socket.</div></details></div></details>","UdpClientStack","stabilizer::hardware::net::NetworkStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UdpFullStack-for-NetworkStack%3C'_,+Device,+Clock%3E\" class=\"impl\"><a href=\"#impl-UdpFullStack-for-NetworkStack%3C'_,+Device,+Clock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Device, Clock&gt; UdpFullStack for NetworkStack&lt;'_, Device, Clock&gt;<div class=\"where\">where\n    Device: Device,\n    Clock: <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u32.html\">u32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Clock as <a class=\"trait\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html\" title=\"trait embedded_time::clock::Clock\">Clock</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/embedded-time/0.12.1/embedded_time/clock/trait.Clock.html#associatedtype.T\" title=\"type embedded_time::clock::Clock::T\">T</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bind\" class=\"method trait-impl\"><a href=\"#method.bind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bind</a>(\n    &amp;mut self,\n    socket: &amp;mut UdpSocket,\n    local_port: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u16.html\">u16</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, NetworkError&gt;</h4></section></summary><div class=\"docblock\"><p>Bind a UDP socket to a specific port.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_to\" class=\"method trait-impl\"><a href=\"#method.send_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">send_to</a>(\n    &amp;mut self,\n    socket: &amp;mut &lt;NetworkStack&lt;'_, Device, Clock&gt; as UdpClientStack&gt;::UdpSocket,\n    remote: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>,\n    buffer: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, Error&lt;NetworkError&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Send a packet to a remote host/port.</p>\n</div></details></div></details>","UdpFullStack","stabilizer::hardware::net::NetworkStack"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[23192]}