(function() {
    var type_impls = Object.fromEntries([["stabilizer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Runner%3C'a,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serial_settings/lib.rs.html#631\">Source</a><a href=\"#impl-Runner%3C'a,+P%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"struct\" href=\"serial_settings/struct.Runner.html\" title=\"struct serial_settings::Runner\">Runner</a>&lt;'a, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"serial_settings/trait.Platform.html\" title=\"trait serial_settings::Platform\">Platform</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/serial_settings/lib.rs.html#643-648\">Source</a><h4 class=\"code-header\">pub fn <a href=\"serial_settings/struct.Runner.html#tymethod.new\" class=\"fn\">new</a>(\n    platform: P,\n    line_buf: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n    serialize_buf: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>],\n    settings: &amp;mut &lt;P as <a class=\"trait\" href=\"serial_settings/trait.Platform.html\" title=\"trait serial_settings::Platform\">Platform</a>&gt;::<a class=\"associatedtype\" href=\"serial_settings/trait.Platform.html#associatedtype.Settings\" title=\"type serial_settings::Platform::Settings\">Settings</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"serial_settings/struct.Runner.html\" title=\"struct serial_settings::Runner\">Runner</a>&lt;'a, P&gt;, &lt;P as <a class=\"trait\" href=\"serial_settings/trait.Platform.html\" title=\"trait serial_settings::Platform\">Platform</a>&gt;::<a class=\"associatedtype\" href=\"serial_settings/trait.Platform.html#associatedtype.Error\" title=\"type serial_settings::Platform::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor</p>\n<h5 id=\"args\"><a class=\"doc-anchor\" href=\"#args\">ยง</a>Args</h5>\n<ul>\n<li>\n<p><code>platform</code> - The platform associated with the serial settings, providing the necessary\ncontext and API to manage device settings.</p>\n</li>\n<li>\n<p><code>line_buf</code> - A buffer used for maintaining the serial menu input line. It should be at\nleast as long as the longest user input.</p>\n</li>\n<li>\n<p><code>serialize_buf</code> - A buffer used for serializing and deserializing settings. This buffer\nneeds to be at least as big as twice the biggest serialized setting plus its path.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.interface_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/serial_settings/lib.rs.html#663\">Source</a><h4 class=\"code-header\">pub fn <a href=\"serial_settings/struct.Runner.html#tymethod.interface_mut\" class=\"fn\">interface_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;P as <a class=\"trait\" href=\"serial_settings/trait.Platform.html\" title=\"trait serial_settings::Platform\">Platform</a>&gt;::<a class=\"associatedtype\" href=\"serial_settings/trait.Platform.html#associatedtype.Interface\" title=\"type serial_settings::Platform::Interface\">Interface</a></h4></section></summary><div class=\"docblock\"><p>Get the device communication interface</p>\n</div></details><section id=\"method.platform_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/serial_settings/lib.rs.html#667\">Source</a><h4 class=\"code-header\">pub fn <a href=\"serial_settings/struct.Runner.html#tymethod.platform_mut\" class=\"fn\">platform_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.reference.html\">&amp;mut P</a></h4></section><section id=\"method.platform\" class=\"method\"><a class=\"src rightside\" href=\"src/serial_settings/lib.rs.html#671\">Source</a><h4 class=\"code-header\">pub fn <a href=\"serial_settings/struct.Runner.html#tymethod.platform\" class=\"fn\">platform</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.reference.html\">&amp;P</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method\"><a class=\"src rightside\" href=\"src/serial_settings/lib.rs.html#679-682\">Source</a><h4 class=\"code-header\">pub fn <a href=\"serial_settings/struct.Runner.html#tymethod.poll\" class=\"fn\">poll</a>(\n    &amp;mut self,\n    settings: &amp;mut &lt;P as <a class=\"trait\" href=\"serial_settings/trait.Platform.html\" title=\"trait serial_settings::Platform\">Platform</a>&gt;::<a class=\"associatedtype\" href=\"serial_settings/trait.Platform.html#associatedtype.Settings\" title=\"type serial_settings::Platform::Settings\">Settings</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.bool.html\">bool</a>, &lt;&lt;P as <a class=\"trait\" href=\"serial_settings/trait.Platform.html\" title=\"trait serial_settings::Platform\">Platform</a>&gt;::<a class=\"associatedtype\" href=\"serial_settings/trait.Platform.html#associatedtype.Interface\" title=\"type serial_settings::Platform::Interface\">Interface</a> as ErrorType&gt;::Error&gt;</h4></section></summary><div class=\"docblock\"><p>Must be called periodically to process user input.</p>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">ยง</a>Returns</h5>\n<p>A boolean indicating true if the settings were modified.</p>\n</div></details></div></details>",0,"stabilizer::hardware::SerialTerminal"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[5928]}