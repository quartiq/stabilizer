name: Continuous Integration

on:
  push:
    branches: [master, staging, trying]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: thumbv7em-none-eabihf
          override: true
          components: clippy
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: clippy

  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: thumbv7em-none-eabihf
          override: true
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: cargo build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: cargo build release+semihosting
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features semihosting

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path lockin/Cargo.toml --target=x86_64-unknown-linux-gnu

  # Tell bors about it
  # https://github.com/rtic-rs/cortex-m-rtic/blob/8a4f9c6b8ae91bebeea0791680f89375a78bffc6/.github/workflows/build.yml#L566-L603
  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - style
      - clippy
      - compile
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        run: exit 0
  ci-failure:
    name: ci
    if: github.event_name == 'push' && !success()
    needs:
      - style
      - clippy
      - compile
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a failure
        run: exit 1
